@model IEnumerable<Shampan.Models.SettingsModel>

<div class="container-fluid">

    <div class="row">
        <div class="col-md-12">
            <div class="card card-secondary">
                <div class="card-header">
                </div>
            </div>
        </div>

    </div>

    <div class="card">

        <div class="card-header p-2">
            <h5>Filters</h5>
        </div>
        <div class="card-body p-2">
           
            <div class="form-group row">
                &nbsp;   &nbsp;
                &nbsp;


               <div class="col-sm-2">
  <label for="searchInput" class="label">  &nbsp;   &nbsp;
                &nbsp;</label>
  <div class="input-group">
    <input type="text" id="searchInput" class="form-control form-control-sm" />
  </div>
</div>

<div class="col-sm-2" style="margin-top: 28px;">
 <button type="button" id="searchButton" class="searchButton">
  <span class="fa fa-search"></span> 
  Search
</button>

</div>



            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="card card-secondary">

                <div class="card-header">
                    <p class="card-title">
                        <strong>All Settings</strong>
                     </p>
                </div>

                <div class="card-body">
                    <div class="row">
                        <div class="col-md-2">
                            <div class="editor-label">
                                <label>Setting Group</label>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="editor-label">
                                <label>Setting Name</label>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="editor-label">
                                <label>Setting Value</label>
                                <span class="text-red">*</span>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="editor-label">
                                <label>Setting Type</label>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="editor-label">
                                <label>Remark</label>
                            </div>
                        </div>
                    </div>
                    @foreach (var item in Model)
                    {
                        if (item.SettingGroup.ToLower() != "segment")
                        {
                            @Html.Partial("/Views/Common/_Setting.cshtml", item)
                            ;
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>


<script>
  document.addEventListener("DOMContentLoaded", function() {
    var searchButton = document.getElementById("searchButton");
    var searchInput = document.getElementById("searchInput");
    var settings = document.getElementsByClassName("setting-item");

    searchButton.addEventListener("click", function() {
      var searchTerm = searchInput.value.toLowerCase();

      // Loop through each setting item
      for (var i = 0; i < settings.length; i++) {
        var settingItem = settings[i];
        var settingName = settingItem.getAttribute("data-setting-name").toLowerCase();
        var settingGroup = settingItem.getAttribute("data-setting-group").toLowerCase();

        // Check if either setting name or setting group matches the search term
        if (settingName.includes(searchTerm) || settingGroup.includes(searchTerm)) {
          settingItem.style.display = "block"; // Show the matching setting item
        } else {
          settingItem.style.display = "none"; // Hide the non-matching setting item
        }
      }
    });
  });
</script>



