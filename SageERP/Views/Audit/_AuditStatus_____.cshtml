@using Shampan.Models
@model Shampan.Models.AuditModule.AuditMaster



<div class="modal-dialog draggable modal-lg" role="document" style="max-width:65%;">
	<div class="modal-content" style="width:100%;">
		<div class="modal-header">
			<h4 class="modal-title">Audit Status</h4>
			<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
		</div>


		<div class="modal fade" id="modal-IssueSubmit" style="display: none;">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<button type="button" class="close" data-dismiss="modal" aria-label="Close">
						</button>
					</div>
					<div class="modal-body">
						<div class="col-sm-12">
							@Html.LabelFor(model => model.ReasonOfUnPost)
							<div class="input-group ">
								@Html.TextArea("ReasonOfUnPost",null, new { @class = "  form-control form-control-sm " ,@id="UnPostReasonOfIssue"})
							</div>

						</div>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-default pull-left" data-dismiss="modal" id="modelClose">Close</button>
						<button type="button" class="btn btn-primary IssueSubmit">Submit</button>
					</div>
				</div>

			</div>

		</div>










		<div class="modal-body">

			<div class="container-fluid">

				@using (Html.BeginForm("CreateEdit", "AuditIssue", FormMethod.Post, new { @Id = "frm_Audit_Issue" }))
				{
					@Html.HiddenFor(model => model.Id,new {@Id  = "IssueId"})
					@Html.HiddenFor(model => model.Edit)
					@Html.HiddenFor(model => model.IsPost)

					@Html.HiddenFor(model => model.Operation, new {@Id = "IssueOperation"})

					<div class="form-group row">


						@*<div class="col-sm-3">
							@Html.LabelFor(model => model.IssueName)
							@Html.TextBoxFor(model => model.IssueName, new { @class = "  form-control input-sm" })
							@Html.ValidationMessageFor(model => model.IssueName)
						</div>

						<div class="col-sm-3">
							@Html.LabelFor(model => model.DateOfSubmission)
							<div class="input-group date">
								@Html.TextBoxFor(model => model.DateOfSubmission, new { @class = "  form-control input-sm dateRange" })
								<div class="input-group-append">
									<div class="input-group-text"><i class="far fa-calendar-alt"></i></div>
								</div>
							</div>

							@Html.ValidationMessageFor(model => model.DateOfSubmission)
						</div>
						<div class="col-sm-3">
							@Html.LabelFor(model => model.IssuePriority)
							@Html.DropDownListFor(model => model.IssuePriority, Enumerable.Empty<SelectListItem>(), new {@class = "form-control", @data_selected = Model.IssuePriority})
							@Html.ValidationMessageFor(model => model.IssuePriority)
						</div>
						<div class="col-sm-3">
							@Html.LabelFor(model => model.AuditType)
							@Html.DropDownListFor(model => model.AuditType, Enumerable.Empty<SelectListItem>(), new {@class = "form-control", @data_selected = Model.AuditType})
							@Html.ValidationMessageFor(model => model.AuditType)
						</div>*@

					</div>

					<div class="row form-group">

						@*<div class="col-sm-3">
							@Html.LabelFor(model => model.IssueStatus)
							@Html.DropDownListFor(model => model.IssueStatus, Enumerable.Empty<SelectListItem>(), new {@class = "form-control", @data_selected = Model.IssueStatus})
							@Html.ValidationMessageFor(model => model.IssueStatus)
						</div>*@


					</div>

					<div class="row form-group">


						@*<div class="col-9">
							@Html.LabelFor(model => model.IssueDetails)
							@Html.TextAreaFor(model => model.IssueDetails, new { @class = "  form-control input-sm" })
							@Html.ValidationMessageFor(model => model.IssueDetails)
						</div>*@
					</div>


					<div class="row form-group">
						<div class="col-md-3">
							<div class="editor-label">
								<label>Attachments</label>
							</div>
							<input type="file" accept=".jpg,.jpeg, .png,.pdf, .xls, .xlsx,.docx" id="fileToUpload" name="Attachments" multiple="multiple" />

						</div>

					</div>
					<div class="row">
					</div>

					<div class="row mb-2">
						<ul class="list-group fileGroup">

							@*@foreach (AuditIssueAttachments item in Model.AttachmentsList)
							{
								<li class="list-group-item" id="file-@item.Id">
									<span>
										@item.DisplayName
									</span>
									<a target="_blank" href="/AuditIssue/DownloadFile?filePath=@item.FileName" class=" ml-2 btn btn-primary btn-sm float-right ml-2">Download</a>

									<button onclick="AuditController.deleteIssueFile('@item.Id' ,'@item.FileName')" class=" ml-2 btn btn-danger btn-sm float-right" type="button">Delete</button>


								</li>
							}*@

						</ul>
					</div>

				}

				@if (Model.Edit.Equals("issue", StringComparison.CurrentCultureIgnoreCase))
				{
					<div class="row">
						<div class="col-6">

							@if (Model.Operation.Equals("update", StringComparison.OrdinalIgnoreCase))
							{

								<button type="button" class="button sslUpdate frm_Audit_IssuebtnMainSave pt-1 btnSaveIssue"> Update</button>
								<button type="button" class="button btnPost sslPost">Post</button>

								if (Model.IsPost.Equals("Y", StringComparison.OrdinalIgnoreCase))
								{

									@*<button type="button" class="button btnUnPost sslUnPost" data-toggle="modal" data-target="#modal-IssueSubmit">UnPost</button>*@



								}
								else
								{
									@*<button type="button" class="button btnUnPost sslUnPost" data-toggle="modal" style="display:none;" data-target="#modal-IssueSubmit">UnPost</button>*@


								}

							}
							else
							{

								<button type="button" class="button sslSave frm_Audit_IssuebtnMainSave pt-1 btnSaveIssue">
									Save &nbsp;
								</button>

								<button class="button btnPost sslPost" type="button" id="SavePost" style="display:none;">Post</button>


								@*<button type="button" class="button btnUnPost sslUnPost" data-toggle="modal" style="display:none;" data-target="#modal-IssueSubmit">UnPost</button>*@




							}


							@*@if (Model.Operation.Equals("update", StringComparison.OrdinalIgnoreCase))
						{
						<button type="button" class="button sslUpdate frm_Audit_IssuebtnMainSave pt-1 btnSaveIssue"> Update</button>

						<button type="button" class="button btnPost sslPost">Post</button>


						}
						else
						{
						<button type="button" class="button sslSave frm_Audit_IssuebtnMainSave pt-1 btnSaveIssue">
						Save &nbsp;
						</button>


						<button class="button btnPost sslPost" type="button" id="SavePost" style="display:none;">Post</button>

						}*@
						</div>



					</div>







					<div class="row mt-1">
						<div class="col-2">
							@*<button type="button" class="btn btn-outline-secondary  pt-1" onclick="resetForm('frm_Audit_Issue',['IssueDetails'])">Reset</button>*@
							<button type="button" class="button sslUnPost  pt-1" onclick="resetForm('frm_Audit_Issue',['IssueDetails'])">Reset</button>
						</div>
					</div>


				}

				<div style="display: none; width: 100%;" id="allSectionsIssueUser">
					<div class="row mt-2">
						<div class="col-3">
							@*<i class="fa fa-plus"></i>*@
							<button type="button" title="Add Email Details" id="addIssueAuditUser" class="button NewButton addNewButton mb-2">Add User Email</button>
						</div>
					</div>

					<table class="table table-bordered" id="issueUserAudit" style="width: 100% !important;">
						<thead>
							<tr>
								<th>User Name</th>
								<th>Email</th>
								<th>Action</th>
							</tr>
						</thead>
						<tbody id="UserBody">
						</tbody>

					</table>


				</div>




			</div>




		</div>
		<div class="modal-footer">
			@*<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>*@
			<button type="button" class="button sslUnPost" data-dismiss="modal">Close</button>

		</div>
	</div>
</div>



